/*
 * Copyright (c) 2021 Rafael Yumagulov
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
        macros {
                ZMK_MACRO(alt_LBRC,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N1 &kp KP_N2 &kp KP_N3>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_RBRC,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N1 &kp KP_N2 &kp KP_N5>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_LT,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N6 &kp KP_N0>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_GT,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N6 &kp KP_N2>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_comma,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N4 &kp KP_N4>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_dot,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N4 &kp KP_N6>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_slash,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N4 &kp KP_N7>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_qmark,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N6 &kp KP_N3>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_at,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N6 &kp KP_N4>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_semi,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N5 &kp KP_N9>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_colon,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N5 &kp KP_N8>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_dqt,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N3 &kp KP_N4>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_apostrophe,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N3 &kp KP_N9>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_pipe,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N1 &kp KP_N2 &kp KP_N4>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_carret,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N9 &kp KP_N4>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_dollar,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N3 &kp KP_N6>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_hash,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N3 &kp KP_N5>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_star,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N4 &kp KP_N2>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(alt_ampersand,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N3 &kp KP_N8>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(rus_number,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT>
                        , <&macro_tap &kp KP_N2 &kp KP_N5 &kp KP_N2>
                        , <&macro_release &kp LALT>;
                )
                ZMK_MACRO(m_en,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT &kp LSHFT>
                        , <&macro_tap &kp N1>
                        , <&macro_release &kp LALT &kp LSHFT>;
                )
                ZMK_MACRO(m_ru,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LALT &kp LSHFT>
                        , <&macro_tap &kp N2>
                        , <&macro_release &kp LALT &kp LSHFT>;
                )
                ZMK_MACRO(m_c_left,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LCTRL>
                        , <&macro_tap &kp LEFT>
                        , <&macro_release &kp LCTRL>;
                )
                ZMK_MACRO(m_c_right,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LCTRL>
                        , <&macro_tap &kp RIGHT>
                        , <&macro_release &kp LCTRL>;
                )
                ZMK_MACRO(m_cs_left,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LCTRL &kp LSHFT>
                        , <&macro_tap &kp LEFT>
                        , <&macro_release &kp LCTRL &kp LSHFT>;
                )
                ZMK_MACRO(m_cs_right,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LCTRL &kp LSHFT>
                        , <&macro_tap &kp RIGHT>
                        , <&macro_release &kp LCTRL &kp LSHFT>;
                )
                ZMK_MACRO(m_ctrl_z,
                        wait-ms = <20>;
                        tap-ms = <20>;
                        bindings = <&macro_press &kp LCTRL>
                        , <&macro_tap &kp Z>
                        , <&macro_release &kp LCTRL>;
                )
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
  &none   &mt LALT  RBKT     &kp Q   &kp W   &kp E         &kp R             &kp T         &kp Y         &kp U            &kp I         &kp O     &kp P       &kp LBKT        &none
          &mt LCTRL GRAVE    &kp A   &kp S   &kp D         &kp F             &kp G         &kp H         &kp J            &kp K         &kp L     &kp SEMI    &mt RCTRL SQT
          &kp LGUI           &kp Z   &kp X   &kp C         &kp V             &kp B         &kp N         &kp M            &kp COMMA     &kp DOT   &alt_dot    &alt_comma
                                             &lt RSE TAB   &mt LSHFT SPACE   &lt LWR RET   &lt LWR ESC   &mt RSHFT BSPC   &lt RSE DEL
                        >;
                };
                lower_layer {
                        bindings = <
  &none   &mt LALT PERCENT     &kp KP_SLASH    &kp KP_ASTERISK  &kp MINUS      &kp PLUS      &alt_LBRC    &alt_RBRC  &kp N7     &kp N8        &kp N9     &kp BSLH      &alt_dqt           &none
          &mt LCTRL &alt_pipe  &alt_qmark      &kp EXCL         &m_ru          &m_en         &kp LPAR     &kp RPAR   &kp N4     &kp N5        &kp N6     &alt_semi     &alt_colon
          &alt_carret          &alt_ampersand  &alt_at          &kp UNDER      &kp EQUAL     &alt_LT      &alt_GT    &kp N1     &kp N2        &kp N3     &kp N0        &alt_apostrophe
                                                                &lt ADJ TAB    &trans        &trans       &trans     &trans     &lt ADJ DEL
                        >;
                };

                raise_layer {
                        bindings = <
  &none   &kp LALT     &alt_hash    &kp F7   &kp F8   &kp F9   &kp F12      &kp C_VOL_UP   &m_cs_left  &kp UP       &m_cs_right  &kp PG_UP   &kp INS     &none
          &m_ctrl_z    &alt_dollar  &kp F4   &kp F5   &kp F6   &kp F11      &kp HOME       &kp LEFT    &kp DOWN     &kp RIGHT    &kp END     &kp K_APP
          &kp LSHFT    &rus_number  &kp F1   &kp F2   &kp F3   &kp F10      &kp C_VOL_DN   &m_c_left   &kp PSCRN    &m_c_right   &kp PG_DN   &kp RSHFT
                                             &trans   &trans   &lt ADJ RET  &lt ADJ ESC    &trans      &trans
                        >;
                };
                adjust_layer {
                        bindings = <
  &none   &reset        &none          &none          &none          &none          &kp CAPS       &kp KP_NUM     &kp SLCK       &none          &none          &none          &reset            &none
          &bt BT_CLR    &bt BT_SEL 4   &bt BT_SEL 2   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0   &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_CLR
          &bootloader   &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &bootloader
                                                      &trans         &none          &trans         &none          &trans         &trans
                        >;
                };
        };
};
